server {
        listen 80;
        listen [::]:80;

        root /var/www/html;
        index index.html index.htm index.nginx-debian.html;

        # REPLACE your_domain with your URL
        server_name your_domain www.your_domain;

        location / {
                proxy_pass http://nodejs:8080;
        }

        location ~ /.well-known/acme-challenge {
                allow all;
                root /var/www/html;
        }
}

# UNCOMMENT THE FOLLOWING LINES (Except for ##REPLACE comments)
# server {
        # listen 443 ssl http2;
        # listen [::]:443 ssl http2;
        ## REPLACE your_domain with your url
        # server_name your_domain www.your_domain;

        # server_tokens off;

        ## REPLACE your_domain with your url
        # ssl_certificate /etc/letsencrypt/live/your_domain/fullchain.pem;
        # ssl_certificate_key /etc/letsencrypt/live/your_domain/privkey.pem;

        # ssl_buffer_size 8k;

        # ssl_dhparam /etc/ssl/certs/dhparam-2048.pem;

        # ssl_protocols TLSv1.2;
        # ssl_prefer_server_ciphers on;

        # ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;

        # ssl_ecdh_curve secp384r1;
        # ssl_session_tickets off;

        # ssl_stapling on;
        # ssl_stapling_verify on;
        # resolver 8.8.8.8;

        # location / {
        #         try_files $uri @nodejs;
        # }

        # location @nodejs {
        #         proxy_pass http://nodejs:8080;
        #         add_header X-Frame-Options "SAMEORIGIN" always;
        #         add_header X-XSS-Protection "1; mode=block" always;
        #         add_header X-Content-Type-Options "nosniff" always;
        #         add_header Referrer-Policy "no-referrer-when-downgrade" always;
        #         add_header Content-Security-Policy "default-src * data: 'unsafe-eval' 'unsafe-inline'" always;
        # }

        # root /var/www/html;
        # index index.html index.htm index.nginx-debian.html;
# }